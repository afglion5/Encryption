# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Sat Oct 26 22:20:26 2024
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))